version: "2.1"

volumes:
  db:
  redis:

services:
  autoheal:
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - TZ=$TZ
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    image: willfarrell/autoheal
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKER_PATH/portainer:/data
    environment:
      - TZ=$TZ
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=Etc/UTC
      - VERSION=docker
      - PLEX_CLAIM=$PLEX_CLAIM
    volumes:
      - $DOCKER_PATH/plex:/config
      - $MEDIA_PATH/movies:/movies
      - $MEDIA_PATH/tv:/tv
      - $EXTERNAL_PATH:/external
      - $MEDIA_PATH/music:/music
    restart: unless-stopped
  transmission:
    container_name: transmission-openvpn
    restart: always
    cap_add:
      - NET_ADMIN
    volumes:
      - $DOCKER_PATH/transmission:/config
      - $TORRENT_PATH:/data
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - OPENVPN_PROVIDER=NORDVPN
      - OPENVPN_USERNAME=$OPENVPN_USERNAME
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      - NORDVPN_COUNTRY=GB
      - NORDVPN_SERVER=uk2023.nordvpn.com
      - LOCAL_NETWORK=192.168.0.0/16
      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=true
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      # Transmission
      - "9091:9091"
      # Soulseek
      - "6080:6080"
      - "62828:62828"
      - "62829:62829"
    image: haugene/transmission-openvpn
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: always
    ports:
      - "7878:7878"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/radarr:/config
      - $MEDIA_PATH/movies:/movies
      - $USB_PATH:/data
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: always
    ports:
      - "8989:8989"
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/sonarr:/config
      - $MEDIA_PATH/tv:/tv
      - $EXTERNAL_PATH/media/tv:/external_tv
      - $USB_PATH:/data
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: always
    ports:
      - "9696:9696"
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/prowlarr:/config
      - $USB_PATH:/data
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/overseerr:/config
      - $MEDIA_PATH:/media
      - $MEDIA_PATH/movies:/movies
      - $MEDIA_PATH/tv:/tv
      - $USB_PATH:/data
    ports:
      - 5055:5055
    restart: unless-stopped
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/lidarr:/config
      - $MEDIA_PATH/music:/music
      - $USB_PATH:/data
    ports:
      - 8686:8686
    restart: unless-stopped
  readarr:
    image: lscr.io/linuxserver/readarr:nightly
    container_name: readarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/readarr:/config
      - $MEDIA_PATH/books:/books
      - $USB_PATH:/data
    ports:
      - 8787:8787
    restart: unless-stopped
  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    restart: always
    image: jc21/nginx-proxy-manager:latest
    ports:
      - "80:80"
      - "13902:81"
      - "443:443"
    environment:
      DB_MYSQL_HOST: "mariadb"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: $MYSQL_USER
      DB_MYSQL_PASSWORD: $MYSQL_PASSWORD
      DB_MYSQL_NAME: "npm"
    volumes:
      - $DOCKER_PATH/nginxproxymanager:/data
      - $DOCKER_PATH/nginxproxymanager/letsencrypt:/etc/letsencrypt
    depends_on:
      - mariadb
  mariadb:
    container_name: mariadb
    image: "jc21/mariadb-aria:latest"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: "npm"
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - $DOCKER_PATH/nginxproxymanager/db:/var/lib/mysql
  soulseek:
    container_name: soulseek
    image: realies/soulseek:latest
    platform: linux/amd64
    build: .
    environment:
      - PGID=$PGID
      - PUID=$PUID
    network_mode: service:transmission
    depends_on:
      - transmission
    volumes:
      - $DOCKER_PATH/soulseek/appdata:/data/.SoulseekQt
      - $MEDIA_PATH/music:/data/Soulseek Downloads
      - $DOCKER_PATH/soulseek/shared:/data/Soulseek Shared Folder
      - $DOCKER_PATH/soulseek/logs:/data/Soulseek Chat Logs
      - $MEDIA_PATH/music:/data/music
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "47975:80/tcp"
    environment:
      PGID: $PGID
      PUID: $PUID
      TZ: $TZ
      ServerIP: $SERVERIP
      DNSMASQ_USER: root
      WEBPASSWORD: $WEBPASSWORD
    volumes:
      - $DOCKER_PATH/pihole/pihole:/etc/pihole
      - $DOCKER_PATH/pihole/dnsmasq.d:/etc/dnsmasq.d
    restart: unless-stopped
  mc:
    image: itzg/minecraft-server:java8
    container_name: minecraft-server
    environment:
      PGID: $PGID
      PUID: $PUID
      EULA: "true"
      TYPE: AUTO_CURSEFORGE
      VERSION: 1.16.5
      CF_API_KEY: $CF_API_KEY
      CF_SLUG: servitor-mods
      VIEW_DISTANCE: 12
      MEMORY: 10G
      MOTD: $MOTD
      ICON: https://i.kym-cdn.com/profiles/icons/big/000/064/839/Markuspersson.jpg?1307769149
    ports:
      - "25565:25565"
      - "24454:24454/udp"
    volumes:
      - $DOCKER_PATH/mc-paper:/data
    restart: unless-stopped
  backups:
    image: itzg/mc-backup
    container_name: minecraft-backups
    environment:
      BACKUP_INTERVAL: "2h"
      RCON_HOST: mc
      PRE_BACKUP_SCRIPT: |
        echo "Before backup!"
        echo "Also before backup from $$RCON_HOST to $$DEST_DIR"
      POST_BACKUP_SCRIPT_FILE: /post-backup.sh
    volumes:
      - $DOCKER_PATH/mc-paper:/data:ro
      - $DOCKER_PATH/mc-backups:/backups
      - $DOCKER_PATH/post-backup.sh:/post-backup.sh:ro
    restart: unless-stopped
    depends_on:
      - mc
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - DEFAULT_WORKSPACE=/config/workspace
    volumes:
      - $DOCKER_PATH/vscode:/config
    ports:
      - 8443:8443
    restart: unless-stopped
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/sabnzbd:/config
      - $USENET_PATH/incomplete:/data/usenet/incomplete
      - $USENET_PATH/completed:/data/usenet/completed
    ports:
      - 8080:8080
    restart: unless-stopped
  kapowarr:
    container_name: kapowarr
    restart: always
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/kapowarr/kapowarr-db:/app/db
      - $DOCKER_PATH/kapowarr/temp_downloads:/app/temp_downloads
      - $MEDIA_PATH/comics:/content
    ports:
      - "5656:5656"
    image: "mrcas/kapowarr:latest"
  komga:
    image: gotson/komga:1.3.1
    container_name: komga
    volumes:
      - $DOCKER_PATH/komga:/config
      - $MEDIA_PATH/comics:/comics
      - $MEDIA_PATH/manga:/manga
      - $USB_PATH:/data
    ports:
      - 25600:25600
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    restart: unless-stopped
  kaizoku:
    container_name: kaizoku
    image: ghcr.io/oae/kaizoku:latest
    environment:
      - DATABASE_URL=postgresql://kaizoku:kaizoku@kaizoku-db:5432/kaizoku
      - KAIZOKU_PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $MEDIA_PATH/manga:/manga
      - $DOCKER_PATH/kaizoku/config:/config
      - $DOCKER_PATH/kaizoku/logs:/logs
    depends_on:
      kaizoku-db:
        condition: service_healthy
    ports:
      - "3000:3000"
  redis:
    image: redis:7-alpine
    volumes:
      - redis:/data
  kaizoku-db:
    image: postgres:15-alpine
    container_name: kaizoku-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kaizoku"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=kaizoku
      - POSTGRES_DB=kaizoku
      - POSTGRES_PASSWORD=kaizoku
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - db:/var/lib/postgresql/data
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - PASSWORD=$CALIBRE_PASSWORD
    volumes:
      - $DOCKER_PATH/calibre:/config
      - $MEDIA_PATH/books:/books
    ports:
      - 8282:8080
      - 8181:8181
      - 8081:8081
    restart: unless-stopped

  unpackerr:
    image: golift/unpackerr
    container_name: unpackerr
    volumes:
      - $USB_PATH:/data
    restart: always
    user: ${PUID}:${PGID}
    environment:
      - TZ=${TZ}
      # General config
      - UN_DEBUG=false
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0644
      - UN_DIR_MODE=0755
      # Sonarr Configs
      - UN_SONARR_0_URL=http://192.168.178.24:8989
      - UN_SONARR_0_API_KEY=$SONARR_API_KEY
      - UN_SONARR_0_PATHS_0=/data
      - UN_SONARR_0_PROTOCOLS=usenet
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m
      # Radarr Config
      - UN_RADARR_0_URL=http://192.168.178.24:7878
      - UN_RADARR_0_API_KEY=$RADARR_API_KEY
      - UN_RADARR_0_PATHS_0=/data
      - UN_RADARR_0_PROTOCOLS=usenet
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m

    security_opt:
      - no-new-privileges:true
